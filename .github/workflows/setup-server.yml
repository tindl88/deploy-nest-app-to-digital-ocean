name: 1. Setup Server
on:
  workflow_dispatch:
jobs:
  install-platform:
    runs-on: ubuntu-latest
    steps:
      - name: Connect to server and install software
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: ${{ secrets.STAGE_SERVER_HOST }}
          username: ${{ secrets.STAGE_SERVER_USERNAME }}
          port: 22
          key: ${{ secrets.STAGE_SERVER_PRIVATE_SSH_KEY }}
          script: |
            apt-get install -y docker.io

            # Check if Docker Compose is already installed
            if ! command -v docker-compose &> /dev/null
            then
              echo "Docker Compose not found, installing..."
              sudo curl -L "https://github.com/docker/compose/releases/download/v2.29.1/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
              chmod +x /usr/local/bin/docker-compose
            else
              echo "Docker Compose is already installed."
            fi

            # Check if Nginx Proxy Manager is already installed
            if [ -d "/nginx-proxy-manager" ]; then
              echo "Nginx Proxy Manager is already installed."
            else
              echo "Nginx Proxy Manager not found, installing..."
              mkdir ~/nginx-proxy-manager && cd ~/nginx-proxy-manager

              # Create the Docker Compose file
              filename="docker-compose.yml"
              cat << EOF > $filename
            services:
              app:
                image: 'jc21/nginx-proxy-manager:latest'
                restart: unless-stopped
                ports:
                  - '80:80'
                  - '81:81'
                  - '443:443'
                volumes:
                  - ./data:/data
                  - ./letsencrypt:/etc/letsencrypt
            EOF

              echo "Docker Compose file created."

              # Start the Nginx Proxy Manager
              sudo docker-compose up -d
              echo "Nginx Proxy Manager is now running."
            fi
            # Configure UFW
            echo "Configuring UFW..."
            sudo ufw enable
            sudo ufw allow 80
            sudo ufw allow 443
            sudo ufw allow 81
            sudo ufw allow 22
            #sudo ufw allow from 203.0.113.101
            #sudo ufw delete allow from 203.0.113.101
            sudo ufw reload
            sudo ufw status

            echo "Ports 80, 81, and 443 have been opened."