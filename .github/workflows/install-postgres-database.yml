name: 2. Install PostgreSQL Databases

on:
  workflow_dispatch:

env:
  DATABASE: ${{ secrets.POSTGRES_DB }}

jobs:
  install-postgres:
    runs-on: ubuntu-latest
    steps:
      - name: Parse DATABASE secret
        run: |
          # Split the DATABASE variable by ';'
          IFS=';' read -r -a prod_vars <<< "${{ env.DATABASE }}"
          # Export each key-value pair
          for var in "${prod_vars[@]}"; do
            echo "$var"
            export $var
          done
          # Save to $GITHUB_ENV for use in later steps
          echo "AP_DB_PORT=${AP_DB_PORT}" >> $GITHUB_ENV
          echo "AP_DB_NAME=${AP_DB_NAME}" >> $GITHUB_ENV
          echo "AP_DB_USERNAME=${AP_DB_USERNAME}" >> $GITHUB_ENV
          echo "AP_DB_PASSWORD=${AP_DB_PASSWORD}" >> $GITHUB_ENV
          echo "AP_DB_SCHEMA=${AP_DB_SCHEMA}" >> $GITHUB_ENV
          echo "AP_DB_LOGS=${AP_DB_LOGS}" >> $GITHUB_ENV

      - name: Connect to server and install PostgreSQL
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: ${{ secrets.STAGE_SERVER_HOST }}
          username: ${{ secrets.STAGE_SERVER_USERNAME }}
          port: 22
          key: ${{ secrets.STAGE_SERVER_PRIVATE_SSH_KEY }}
          script: |
            docker pull postgres:14

            echo "AP_DB_PORT=$AP_DB_PORT"
            echo "AP_DB_NAME=$AP_DB_NAME"
            echo "AP_DB_USERNAME=$AP_DB_USERNAME"
            echo "AP_DB_PASSWORD=$AP_DB_PASSWORD"
            echo "AP_DB_SCHEMA=$AP_DB_SCHEMA"
            echo "AP_DB_LOGS=$AP_DB_LOGS"

            # Run Database
            docker run -d \
              --name postgres_db \
              -e POSTGRES_PASSWORD=$AP_DB_PASSWORD \
              -e POSTGRES_USER=$AP_DB_USERNAME \
              -e POSTGRES_DB=$AP_DB_NAME \
              -p 5432:5432 \
              -v postgres_data:/var/lib/postgresql/data \
              postgres:14

            # Open port 5432
            sudo ufw allow 5432
            sudo ufw reload
