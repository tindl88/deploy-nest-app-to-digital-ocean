name: 2. Install PostgreSQL Databases

on:
  workflow_dispatch:

env:
  DATABASE: ${{ secrets.POSTGRES_DB }}

jobs:
  install-postgres:
    runs-on: ubuntu-latest
    steps:
      - name: Debug DATABASE secret
        run: |
          echo "DATABASE secret: $DATABASE"

      - name: Parse DATABASE secret
        run: |
          echo "Parsing DATABASE secret"

          # Process the multi-line secret
          while IFS= read -r line; do
            echo "Processing: $line"
            # Export each line as an environment variable
            echo "$line" >> $GITHUB_ENV
          done <<< "$DATABASE"

      - name: Verify environment variables
        run: |
          echo "AP_DB_PORT=${{ env.AP_DB_PORT }}"
          echo "AP_DB_NAME=${{ env.AP_DB_NAME }}"
          echo "AP_DB_USERNAME=${{ env.AP_DB_USERNAME }}"
          echo "AP_DB_PASSWORD=${{ env.AP_DB_PASSWORD }}"
          echo "AP_DB_SCHEMA=${{ env.AP_DB_SCHEMA }}"
          echo "AP_DB_LOGS=${{ env.AP_DB_LOGS }}"

      - name: Connect to server and install PostgreSQL
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: ${{ secrets.STAGE_SERVER_HOST }}
          username: ${{ secrets.STAGE_SERVER_USERNAME }}
          port: 22
          key: ${{ secrets.STAGE_SERVER_PRIVATE_SSH_KEY }}
          script: |
            echo "AP_DB_PORT=${{ env.AP_DB_PORT }}"
            echo "AP_DB_NAME=${{ env.AP_DB_NAME }}"
            echo "AP_DB_USERNAME=${{ env.AP_DB_USERNAME }}"
            echo "AP_DB_PASSWORD=${{ env.AP_DB_PASSWORD }}"
            echo "AP_DB_SCHEMA=${{ env.AP_DB_SCHEMA }}"
            echo "AP_DB_LOGS=${{ env.AP_DB_LOGS }}"

            docker pull postgres:14

            # Stop and remove existing container if it exists
            docker stop postgres_db || true
            docker rm postgres_db || true

            # Run Database
            docker run -d \
              --name postgres_db \
              -e POSTGRES_PASSWORD=${{ env.AP_DB_PASSWORD }} \
              -e POSTGRES_USER=${{ env.AP_DB_USERNAME }} \
              -e POSTGRES_DB=${{ env.AP_DB_NAME }} \
              -p 5432:5432 \
              -v postgres_data:/var/lib/postgresql/data \
              postgres:14

            # Open port 5432
            sudo ufw allow 5432
            sudo ufw reload
